name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
        features:
          - --all-features
          - --no-default-features
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install ${{ matrix.rust }} Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Run cargo build --all-targets ${{ matrix.features }}
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all-targets ${{ matrix.features }}

    - name: Run cargo test ${{ matrix.features }}
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: ${{ matrix.features }}

  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install stable Rust with rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt

    - name: Run cargo fmt --all -- --check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install stable Rust with clippy
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy

    - name: Run cargo clippy --all-features
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-features -- -D warnings

    - name: Run cargo clippy --no-default-features
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --no-default-features -- -D warnings
